<!-- pages/signup.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create Account | Recipe App</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
  <div class="container my-5">
    <div class="row justify-content-center">
      <div class="col-lg-5 col-md-7 col-sm-10">
        <div class="card border-0 shadow-sm">
          <div class="card-body p-4 p-sm-5">
            <div class="text-center mb-4">
              <h2 class="mb-1">Create Account</h2>
              <p class="text-muted small">Join our community of food lovers</p>
            </div>
            
            <!-- Error msg -->
            <% if (error) { %>
                <div class="alert alert-danger">
                  <%= error %>
                </div>
              <% } %>
            
            <form action="/auth/signup" method="POST">
              <!-- Username -->
              <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <input type="text" class="form-control" id="username" name="username" required autofocus>
              </div>
              
              <!-- Password -->
              <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input type="password" class="form-control" id="password" name="password" required>
                <div class="form-text small">Password must be at least 8 characters long.</div>
              </div>
              
              <!-- Confirm Password -->
              <div class="mb-4">
                <label for="confirmPassword" class="form-label">Confirm Password</label>
                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
              </div>
              
              <!-- Submit Button -->
              <div class="d-grid mb-4">
                <button type="submit" class="btn btn-primary">Create Account</button>
              </div>
              
              <!-- Login Link -->
              <div class="text-center">
                <p class="mb-0 small">Already have an account? <a href="/auth/login" class="text-decoration-none">Sign In</a></p>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
  <!-- VALIDATIONS -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.querySelector('form');
      const password = document.getElementById('password');
      const confirmPassword = document.getElementById('confirmPassword');
      const username = document.getElementById('username');
      
      // Create error message elements that will be hidden initially
      const passwordError = document.createElement('div');
      passwordError.className = 'invalid-feedback';
      password.parentNode.appendChild(passwordError);
      
      const confirmError = document.createElement('div');
      confirmError.className = 'invalid-feedback';
      confirmPassword.parentNode.appendChild(confirmError);
      
      const usernameError = document.createElement('div');
      usernameError.className = 'invalid-feedback';
      username.parentNode.appendChild(usernameError);
      
      form.addEventListener('submit', function(event) {
        let isValid = true;
        
        // Reset validation state
        [username, password, confirmPassword].forEach(input => {
          input.classList.remove('is-invalid');
          input.classList.remove('is-valid');
        });
        
        // Validate username (at least 3 characters)
        if (username.value.trim().length < 3) {
          username.classList.add('is-invalid');
          usernameError.textContent = 'Username must be at least 3 characters long';
          username.parentNode.appendChild(usernameError);
          isValid = false;
        } else {
          username.classList.add('is-valid');
        }
        
        // Validate password (at least 8 characters)
        if (password.value.length < 8) {
          password.classList.add('is-invalid');
          passwordError.textContent = 'Password must be at least 8 characters long';
          isValid = false;
        } else {
          password.classList.add('is-valid');
        }
        
        // Check if passwords match
        if (password.value !== confirmPassword.value) {
          confirmPassword.classList.add('is-invalid');
          confirmError.textContent = 'Passwords do not match';
          isValid = false;
        } else if (confirmPassword.value) {
          confirmPassword.classList.add('is-valid');
        }
        
        // Prevent form submission if validation fails
        if (!isValid) {
          event.preventDefault();
        }
      });
      
      // Real-time validation for confirm password
      confirmPassword.addEventListener('input', function() {
        if (password.value === confirmPassword.value && confirmPassword.value) {
          confirmPassword.classList.remove('is-invalid');
          confirmPassword.classList.add('is-valid');
        } else {
          confirmPassword.classList.remove('is-valid');
          if (confirmPassword.value) {
            confirmPassword.classList.add('is-invalid');
            confirmError.textContent = 'Passwords do not match';
          }
        }
      });
    });
  </script>
</body>
</html>